/*
Copyright 2019 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/google/knative-gcp/pkg/apis/events/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ScheculerLister helps list Scheculers.
type ScheculerLister interface {
	// List lists all Scheculers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Scheculer, err error)
	// Scheculers returns an object that can list and get Scheculers.
	Scheculers(namespace string) ScheculerNamespaceLister
	ScheculerListerExpansion
}

// scheculerLister implements the ScheculerLister interface.
type scheculerLister struct {
	indexer cache.Indexer
}

// NewScheculerLister returns a new ScheculerLister.
func NewScheculerLister(indexer cache.Indexer) ScheculerLister {
	return &scheculerLister{indexer: indexer}
}

// List lists all Scheculers in the indexer.
func (s *scheculerLister) List(selector labels.Selector) (ret []*v1alpha1.Scheculer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Scheculer))
	})
	return ret, err
}

// Scheculers returns an object that can list and get Scheculers.
func (s *scheculerLister) Scheculers(namespace string) ScheculerNamespaceLister {
	return scheculerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScheculerNamespaceLister helps list and get Scheculers.
type ScheculerNamespaceLister interface {
	// List lists all Scheculers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Scheculer, err error)
	// Get retrieves the Scheculer from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Scheculer, error)
	ScheculerNamespaceListerExpansion
}

// scheculerNamespaceLister implements the ScheculerNamespaceLister
// interface.
type scheculerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Scheculers in the indexer for a given namespace.
func (s scheculerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Scheculer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Scheculer))
	})
	return ret, err
}

// Get retrieves the Scheculer from the indexer for a given namespace and name.
func (s scheculerNamespaceLister) Get(name string) (*v1alpha1.Scheculer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("scheculer"), name)
	}
	return obj.(*v1alpha1.Scheculer), nil
}
